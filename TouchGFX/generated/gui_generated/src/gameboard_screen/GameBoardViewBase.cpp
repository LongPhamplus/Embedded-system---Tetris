/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gameboard_screen/GameBoardViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

GameBoardViewBase::GameBoardViewBase() :
    buttonCallback(this, &GameBoardViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    textArea1.setXY(192, 108);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(224, 76, 65));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HWGC));
    add(textArea1);

    textArea2.setXY(199, 135);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(224, 76, 65));
    textArea2.setLinespacing(0);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_SCORE).getText());
    textArea2.setWildcard(textArea2Buffer);
    textArea2.resizeToCurrentText();
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ISR));
    add(textArea2);

    goLeft.setXY(0, 270);
    goLeft.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    goLeft.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0FHL));
    goLeft.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goLeft.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goLeft.setAction(buttonCallback);
    add(goLeft);

    goRight.setXY(0, 212);
    goRight.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    goRight.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AMI8));
    goRight.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goRight.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goRight.setAction(buttonCallback);
    add(goRight);

    goDown.setXY(0, 154);
    goDown.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    goDown.setLabelText(touchgfx::TypedText(T___SINGLEUSE_MRJK));
    goDown.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goDown.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    goDown.setAction(buttonCallback);
    add(goDown);
}

GameBoardViewBase::~GameBoardViewBase()
{

}

void GameBoardViewBase::setupScreen()
{

}

void GameBoardViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &goRight)
    {
        //Interaction3
        //When goRight clicked call virtual function
        //Call handleRight
        handleRight();
    }
    if (&src == &goLeft)
    {
        //Interaction4
        //When goLeft clicked call virtual function
        //Call handleLeft
        handleLeft();
    }
    if (&src == &goDown)
    {
        //Interaction5
        //When goDown clicked call virtual function
        //Call handleDown
        handleDown();
    }
}

void GameBoardViewBase::handleTickEvent()
{
    //Interaction1
    //When every N tick call virtual function
    //Call tickEvent
    tickEvent();
}
